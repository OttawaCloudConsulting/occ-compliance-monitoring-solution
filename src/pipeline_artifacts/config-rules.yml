AWSTemplateFormatVersion: 2010-09-09
Description: >-
  NIST 800-53 Config Rules.  Includes Security Hub integration.
# Metadata: 
Parameters: 
  pDefaultRegion:
    Type: String
    Default: ca-central-1
  AccessKeysRotatedParamMaxAccessKeyAge:
    Default: '90'
    Type: String
  AcmCertificateExpirationCheckParamDaysToExpiration:
    Default: '90'
    Type: String
  Ec2VolumeInuseCheckParamDeleteOnTermination:
    Default: 'TRUE'
    Type: String
  GuarddutyNonArchivedFindingsParamDaysHighSev:
    Default: '1'
    Type: String
  GuarddutyNonArchivedFindingsParamDaysLowSev:
    Default: '30'
    Type: String
  GuarddutyNonArchivedFindingsParamDaysMediumSev:
    Default: '7'
    Type: String
  IamPasswordPolicyParamMaxPasswordAge:
    Default: '90'
    Type: String
  IamPasswordPolicyParamMinimumPasswordLength:
    Default: '14'
    Type: String
  IamPasswordPolicyParamPasswordReusePrevention:
    Default: '24'
    Type: String
  IamPasswordPolicyParamRequireLowercaseCharacters:
    Default: 'TRUE'
    Type: String
  IamPasswordPolicyParamRequireNumbers:
    Default: 'TRUE'
    Type: String
  IamPasswordPolicyParamRequireSymbols:
    Default: 'TRUE'
    Type: String
  IamPasswordPolicyParamRequireUppercaseCharacters:
    Default: 'TRUE'
    Type: String
  IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge:
    Default: '90'
    Type: String
  RestrictedIncomingTrafficParamBlockedPort1:
    Default: '20'
    Type: String
  RestrictedIncomingTrafficParamBlockedPort2:
    Default: '21'
    Type: String
  RestrictedIncomingTrafficParamBlockedPort3:
    Default: '3389'
    Type: String
  RestrictedIncomingTrafficParamBlockedPort4:
    Default: '3306'
    Type: String
  RestrictedIncomingTrafficParamBlockedPort5:
    Default: '4333'
    Type: String
  S3AccountLevelPublicAccessBlocksParamBlockPublicAcls:
    Default: 'True'
    Type: String
  S3AccountLevelPublicAccessBlocksParamBlockPublicPolicy:
    Default: 'True'
    Type: String
  S3AccountLevelPublicAccessBlocksParamIgnorePublicAcls:
    Default: 'True'
    Type: String
  S3AccountLevelPublicAccessBlocksParamRestrictPublicBuckets:
    Default: 'True'
    Type: String
  VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts:
    Default: '443'
    Type: String
  VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedUdpPorts:
    Default: 1020-1025
    Type: String
  IGWAuthorizedVPC:
    Type: String
# Mappings: 
Conditions: 

  IsDefaultRegion: !Equals 
    - !Ref pDefaultRegion
    - !Ref "AWS::Region"
  IsNotDefaultRegion: 
    !Not [!Equals [!Ref pDefaultRegion, !Ref "AWS::Region"]]
  accessKeysRotatedParamMaxAccessKeyAge:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: AccessKeysRotatedParamMaxAccessKeyAge
  acmCertificateExpirationCheckParamDaysToExpiration:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: AcmCertificateExpirationCheckParamDaysToExpiration
  ec2VolumeInuseCheckParamDeleteOnTermination:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: Ec2VolumeInuseCheckParamDeleteOnTermination
  guarddutyNonArchivedFindingsParamDaysHighSev:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: GuarddutyNonArchivedFindingsParamDaysHighSev
  guarddutyNonArchivedFindingsParamDaysLowSev:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: GuarddutyNonArchivedFindingsParamDaysLowSev
  guarddutyNonArchivedFindingsParamDaysMediumSev:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: GuarddutyNonArchivedFindingsParamDaysMediumSev
  iamPasswordPolicyParamMaxPasswordAge:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: IamPasswordPolicyParamMaxPasswordAge
  iamPasswordPolicyParamMinimumPasswordLength:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: IamPasswordPolicyParamMinimumPasswordLength
  iamPasswordPolicyParamPasswordReusePrevention:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: IamPasswordPolicyParamPasswordReusePrevention
  iamPasswordPolicyParamRequireLowercaseCharacters:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: IamPasswordPolicyParamRequireLowercaseCharacters
  iamPasswordPolicyParamRequireNumbers:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: IamPasswordPolicyParamRequireNumbers
  iamPasswordPolicyParamRequireSymbols:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: IamPasswordPolicyParamRequireSymbols
  iamPasswordPolicyParamRequireUppercaseCharacters:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: IamPasswordPolicyParamRequireUppercaseCharacters
  iamUserUnusedCredentialsCheckParamMaxCredentialUsageAge:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge
  restrictedIncomingTrafficParamBlockedPort1:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: RestrictedIncomingTrafficParamBlockedPort1
  restrictedIncomingTrafficParamBlockedPort2:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: RestrictedIncomingTrafficParamBlockedPort2
  restrictedIncomingTrafficParamBlockedPort3:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: RestrictedIncomingTrafficParamBlockedPort3
  restrictedIncomingTrafficParamBlockedPort4:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: RestrictedIncomingTrafficParamBlockedPort4
  restrictedIncomingTrafficParamBlockedPort5:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: RestrictedIncomingTrafficParamBlockedPort5
  s3AccountLevelPublicAccessBlocksParamBlockPublicAcls:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: S3AccountLevelPublicAccessBlocksParamBlockPublicAcls
  s3AccountLevelPublicAccessBlocksParamBlockPublicPolicy:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: S3AccountLevelPublicAccessBlocksParamBlockPublicPolicy
  s3AccountLevelPublicAccessBlocksParamIgnorePublicAcls:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: S3AccountLevelPublicAccessBlocksParamIgnorePublicAcls
  s3AccountLevelPublicAccessBlocksParamRestrictPublicBuckets:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: S3AccountLevelPublicAccessBlocksParamRestrictPublicBuckets
  vpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts
  vpcSgOpenOnlyToAuthorizedPortsParamAuthorizedUdpPorts:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedUdpPorts

Resources: 
  AccessKeysRotated:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'The credentials are audited for authorized devices, users, and processes by ensuring IAM access keys are rotated as per organizational policy. '
      ConfigRuleName: nist-access-keys-rotated-medium
      InputParameters:
        maxAccessKeyAge:
          Fn::If:
          - accessKeysRotatedParamMaxAccessKeyAge
          - Ref: AccessKeysRotatedParamMaxAccessKeyAge
          - Ref: AWS::NoValue
      Source:
        Owner: AWS
        SourceIdentifier: ACCESS_KEYS_ROTATED

  AcmCertificateExpirationCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Ensure network integrity is protected by ensuring X509 certificates are issued by AWS ACM. These certificates must be valid and unexpired.'
      ConfigRuleName: nist-acm-certificate-expiration-check-medium
      InputParameters:
        daysToExpiration:
          Fn::If:
          - acmCertificateExpirationCheckParamDaysToExpiration
          - Ref: AcmCertificateExpirationCheckParamDaysToExpiration
          - Ref: AWS::NoValue
      Scope:
        ComplianceResourceTypes:
        - AWS::ACM::Certificate
      Source:
        Owner: AWS
        SourceIdentifier: ACM_CERTIFICATE_EXPIRATION_CHECK

  AlbHttpDropInvalidHeaderEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Ensure that your Elastic Load Balancers (ELB) are configured to drop http headers. Because sensitive data can exist, enable encryption in transit to help protect that data.'
      ConfigRuleName: nist-alb-http-drop-invalid-header-enabled-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::ElasticLoadBalancingV2::LoadBalancer
      Source:
        Owner: AWS
        SourceIdentifier: ALB_HTTP_DROP_INVALID_HEADER_ENABLED

  AlbHttpToHttpsRedirectionCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'To help protect data in transit, ensure that your Application Load Balancer automatically redirects unencrypted HTTP requests to HTTPS. Because sensitive data can exist, enable encryption in transit to help protect that data.'
      ConfigRuleName: nist-alb-http-to-https-redirection-check-medium
      Source:
        Owner: AWS
        SourceIdentifier: ALB_HTTP_TO_HTTPS_REDIRECTION_CHECK

  AlbWafEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Ensure AWS WAF is enabled on Elastic Load Balancers (ELB) to help protect web applications. A WAF helps to protect your web applications or APIs against common web exploits.'
      ConfigRuleName: nist-alb-waf-enabled-low
      Scope:
        ComplianceResourceTypes:
        - AWS::ElasticLoadBalancingV2::LoadBalancer
      Source:
        Owner: AWS
        SourceIdentifier: ALB_WAF_ENABLED

  ApiGwCacheEnabledAndEncrypted:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: "To help protect data at rest, ensure encryption is enabled for your API Gateway stage's cache. Because sensitive data can be captured for the API method, enable encryption at rest to help protect that data."
      ConfigRuleName: nist-api-gw-cache-enabled-and-encrypted-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::ApiGateway::Stage
      Source:
        Owner: AWS
        SourceIdentifier: API_GW_CACHE_ENABLED_AND_ENCRYPTED

  ApiGwExecutionLoggingEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'API Gateway logging displays detailed views of users who accessed the API and the way they accessed the API. This insight enables visibility of user activities.'
      ConfigRuleName: nist-api-gw-execution-logging-enabled-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::ApiGateway::Stage
        - AWS::ApiGatewayV2::Stage
      Source:
        Owner: AWS
        SourceIdentifier: API_GW_EXECUTION_LOGGING_ENABLED

  AutoscalingGroupElbHealthcheckRequired:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'The Elastic Load Balancer (ELB) health checks for Amazon Elastic Compute Cloud (Amazon EC2) Auto Scaling groups support maintenance of adequate capacity and availability.'
      ConfigRuleName: nist-autoscaling-group-elb-healthcheck-required-low
      Scope:
        ComplianceResourceTypes:
        - AWS::AutoScaling::AutoScalingGroup
      Source:
        Owner: AWS
        SourceIdentifier: AUTOSCALING_GROUP_ELB_HEALTHCHECK_REQUIRED

  CloudTrailCloudWatchLogsEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Use Amazon CloudWatch to centrally collect and manage log event activity. Inclusion of AWS CloudTrail data provides details of API call activity within your AWS account.'
      ConfigRuleName: nist-cloud-trail-cloud-watch-logs-enabled-low
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED

  CloudTrailEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'AWS CloudTrail can help in non-repudiation by recording AWS Management Console actions and API calls. You can identify the users and AWS accounts that called an AWS service, the source IP address where the calls generated, and the timings of the calls.'
      ConfigRuleName: nist-cloudtrail-enabled-high
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_ENABLED

  CloudTrailEncryptionEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Because sensitive data may exist and to help protect data at rest, ensure encryption is enabled for your AWS CloudTrail trails.'
      ConfigRuleName: nist-cloud-trail-encryption-enabled-medium
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_ENCRYPTION_ENABLED

  CloudTrailLogFileValidationEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Utilize AWS CloudTrail log file validation to check the integrity of CloudTrail logs. Log file validation helps determine if a log file was modified or deleted or unchanged after CloudTrail delivered it.'
      ConfigRuleName: nist-cloud-trail-log-file-validation-enabled-low
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_LOG_FILE_VALIDATION_ENABLED

  CloudtrailS3DataeventsEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'The collection of Simple Storage Service (Amazon S3) data events helps in detecting any anomalous activity. The details include AWS account information that accessed an Amazon S3 bucket, IP address, and time of event.'
      ConfigRuleName: nist-cloudtrail-s3-dataevents-enabled-low
      Source:
        Owner: AWS
        SourceIdentifier: CLOUDTRAIL_S3_DATAEVENTS_ENABLED

  CloudtrailSecurityTrailEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'This rule helps ensure the use of AWS recommended security best practices for AWS CloudTrail, by checking for the enablement of multiple settings. These include the use of log encryption, log validation, and enabling AWS CloudTrail in multiple regions.'
      ConfigRuleName: nist-cloudtrail-security-trail-enabled-medium
      Source:
        Owner: AWS
        SourceIdentifier: CLOUDTRAIL_SECURITY_TRAIL_ENABLED

  CloudwatchAlarmActionCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Amazon CloudWatch alarms alert when a metric breaches the threshold for a specified number of evaluation periods. The alarm performs one or more actions based on the value of the metric or expression relative to a threshold over a number of time periods. '
      ConfigRuleName: nist-cloudwatch-alarm-action-check-low
      InputParameters:
        alarmActionRequired: 'TRUE'
        insufficientDataActionRequired: 'TRUE'
        okActionRequired: 'FALSE'
      Scope:
        ComplianceResourceTypes:
        - AWS::CloudWatch::Alarm
      Source:
        Owner: AWS
        SourceIdentifier: CLOUDWATCH_ALARM_ACTION_CHECK

  CloudwatchLogGroupEncrypted:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'To help protect sensitive data at rest, ensure encryption is enabled for your Amazon CloudWatch Log Groups.'
      ConfigRuleName: nist-cloudwatch-log-group-encrypted-medium
      Source:
        Owner: AWS
        SourceIdentifier: CLOUDWATCH_LOG_GROUP_ENCRYPTED

  CmkBackingKeyRotationEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Enable key rotation to ensure that keys are rotated once they have reached the end of their crypto period.'
      ConfigRuleName: nist-cmk-backing-key-rotation-enabled-medium
      Source:
        Owner: AWS
        SourceIdentifier: CMK_BACKING_KEY_ROTATION_ENABLED

  CodebuildProjectEnvvarAwscredCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Ensure authentication credentials AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY do not exist within AWS Codebuild project environments. Do not store these variables in clear text.'
      ConfigRuleName: nist-codebuild-project-envvar-awscred-check-critical
      Scope:
        ComplianceResourceTypes:
        - AWS::CodeBuild::Project
      Source:
        Owner: AWS
        SourceIdentifier: CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK

  CodebuildProjectSourceRepoUrlCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Ensure the GitHub or Bitbucket source repository URL does not contain personal access tokens, user name and password within AWS Codebuild project environments.'
      ConfigRuleName: nist-codebuild-project-source-repo-url-check-critical
      Scope:
        ComplianceResourceTypes:
        - AWS::CodeBuild::Project
      Source:
        Owner: AWS
        SourceIdentifier: CODEBUILD_PROJECT_SOURCE_REPO_URL_CHECK

  CwLoggroupRetentionPeriodCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: ;Ensure a minimum duration of event log data is retained for your log groups to help with troubleshooting and forensics investigations. The lack of available past event log data makes it difficult to reconstruct and identify potentially malicious events.
      ConfigRuleName: nist-cw-loggroup-retention-period-check-medium
      Source:
        Owner: AWS
        SourceIdentifier: CW_LOGGROUP_RETENTION_PERIOD_CHECK

  DbInstanceBackupEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'The backup feature of Amazon RDS creates backups of your databases and transaction logs. Amazon RDS automatically creates a storage volume snapshot of your DB instance, backing up the entire DB instance.'
      ConfigRuleName: nist-db-instance-backup-enabled-low
      Scope:
        ComplianceResourceTypes:
        - AWS::RDS::DBInstance
      Source:
        Owner: AWS
        SourceIdentifier: DB_INSTANCE_BACKUP_ENABLED

  DmsReplicationNotPublic:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Manage access to the AWS Cloud by ensuring DMS replication instances cannot be publicly accessed. DMS replication instances can contain sensitive information and access control is required for such accounts.'
      ConfigRuleName: nist-dms-replication-not-public-critical
      Scope:
        ComplianceResourceTypes: []
      Source:
        Owner: AWS
        SourceIdentifier: DMS_REPLICATION_NOT_PUBLIC

  DynamodbAutoscalingEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Amazon DynamoDB auto scaling uses the AWS Application Auto Scaling service to adjust provisioned throughput capacity that automatically responds to actual traffic patterns.'
      ConfigRuleName: nist-dynamodb-autoscaling-enabled-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::DynamoDB::Table
      Source:
        Owner: AWS
        SourceIdentifier: DYNAMODB_AUTOSCALING_ENABLED

  DynamodbInBackupPlan:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'To help with data back-up processes, ensure your Amazon DynamoDB tables are a part of an AWS Backup plan. AWS Backup is a fully managed backup service with a policy-based backup solution.'
      ConfigRuleName: nist-dynamodb-in-backup-plan-low
      Source:
        Owner: AWS
        SourceIdentifier: DYNAMODB_IN_BACKUP_PLAN

  DynamodbPitrEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Enable this rule to check that information has been backed up. It also maintains the backups by ensuring that point-in-time recovery is enabled in Amazon DynamoDB. The recovery maintains continuous backups of your table for the last 35 days.'
      ConfigRuleName: nist-dynamodb-pitr-enabled-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::DynamoDB::Table
      Source:
        Owner: AWS
        SourceIdentifier: DYNAMODB_PITR_ENABLED

  DynamodbTableEncryptedKms:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Ensure that encryption is enabled for your Amazon DynamoDB tables. Because sensitive data can exist at rest in these tables, enable encryption at rest to help protect that data.'
      ConfigRuleName: nist-dynamodb-table-encrypted-kms-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::DynamoDB::Table
      Source:
        Owner: AWS
        SourceIdentifier: DYNAMODB_TABLE_ENCRYPTED_KMS

  EbsInBackupPlan:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'To help with data back-up processes, ensure your Amazon Elastic Block Store (Amazon EBS) volumes are a part of an AWS Backup plan. AWS Backup is a fully managed backup service with a policy-based backup solution.'
      ConfigRuleName: nist-ebs-in-backup-plan-low
      Source:
        Owner: AWS
        SourceIdentifier: EBS_IN_BACKUP_PLAN

  EbsSnapshotPublicRestorableCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Manage access to the AWS Cloud by ensuring EBS snapshots are not publicly restorable. EBS volume snapshots can contain sensitive information and access control is required for such accounts.'
      ConfigRuleName: nist-ebs-snapshot-public-restorable-check-critical
      Source:
        Owner: AWS
        SourceIdentifier: EBS_SNAPSHOT_PUBLIC_RESTORABLE_CHECK

  Ec2EbsEncryptionByDefault:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'To help protect data at rest, ensure that encryption is enabled for your Amazon Elastic Block Store (Amazon EBS) volumes. Because sensitive data can exist at rest in these volumes, enable encryption at rest to help protect that data.'
      ConfigRuleName: nist-ec2-ebs-encryption-by-default-medium
      Source:
        Owner: AWS
        SourceIdentifier: EC2_EBS_ENCRYPTION_BY_DEFAULT

  Ec2Imdsv2Check:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Ensure the Instance Metadata Service Version 2 (IMDSv2) method is enabled to help protect access and control of Amazon Elastic Compute Cloud (Amazon EC2) instance metadata.'
      ConfigRuleName: nist-ec2-imdsv2-check-high
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::Instance
      Source:
        Owner: AWS
        SourceIdentifier: EC2_IMDSV2_CHECK

  Ec2InstanceDetailedMonitoringEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Enable this rule to help improve Amazon Elastic Compute Cloud (Amazon EC2) instance monitoring on the Amazon EC2 console, which displays monitoring graphs with a 1-minute period for the instance.'
      ConfigRuleName: nist-ec2-instance-detailed-monitoring-enabled-low
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::Instance
      Source:
        Owner: AWS
        SourceIdentifier: EC2_INSTANCE_DETAILED_MONITORING_ENABLED

  Ec2InstanceManagedBySsm:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'An inventory of the software platforms and applications within the organization is possible by managing Amazon Elastic Compute Cloud (Amazon EC2) instances with AWS Systems Manager.'
      ConfigRuleName: nist-ec2-instance-managed-by-systems-manager-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::Instance
        - AWS::SSM::ManagedInstanceInventory
      Source:
        Owner: AWS
        SourceIdentifier: EC2_INSTANCE_MANAGED_BY_SSM

  Ec2InstanceNoPublicIp:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Manage access to the AWS Cloud by ensuring Amazon Elastic Compute Cloud (Amazon EC2) instances cannot be publicly accessed. Amazon EC2 instances can contain sensitive information and access control is required for such accounts.'
      ConfigRuleName: nist-ec2-instance-no-public-ip-high
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::Instance
      Source:
        Owner: AWS
        SourceIdentifier: EC2_INSTANCE_NO_PUBLIC_IP

  Ec2ManagedinstanceAssociationComplianceStatusCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Use AWS Systems Manager Associations to help with inventory of software platforms and applications within an organization.'
      ConfigRuleName: nist-ec2-managedinstance-association-compliance-status-check-low
      Scope:
        ComplianceResourceTypes:
        - AWS::SSM::AssociationCompliance
      Source:
        Owner: AWS
        SourceIdentifier: EC2_MANAGEDINSTANCE_ASSOCIATION_COMPLIANCE_STATUS_CHECK

  Ec2ManagedinstancePatchComplianceStatusCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Enable this rule to help with identification and documentation of Amazon Elastic Compute Cloud (Amazon EC2) vulnerabilities.'
      ConfigRuleName: nist-ec2-managedinstance-patch-compliance-status-check-high
      Scope:
        ComplianceResourceTypes:
        - AWS::SSM::PatchCompliance
      Source:
        Owner: AWS
        SourceIdentifier: EC2_MANAGEDINSTANCE_PATCH_COMPLIANCE_STATUS_CHECK

  Ec2StoppedInstance:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: "Enable this rule to help with the baseline configuration of Elastic Compute Cloud (Amazon EC2) instances by checking whether Amazon EC2 instances have been stopped for more than the allowed number of days, according to your organization's standards."
      ConfigRuleName: nist-ec2-stopped-instance-medium
      Source:
        Owner: AWS
        SourceIdentifier: EC2_STOPPED_INSTANCE

  Ec2VolumeInuseCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'This rule ensures that Amazon Elastic Block Store volumes that are attached to Amazon Elastic Compute Cloud (Amazon EC2) instances are marked for deletion when an instance is terminated.'
      ConfigRuleName: nist-ec2-volume-inuse-check-medium
      InputParameters:
        deleteOnTermination:
          Fn::If:
          - ec2VolumeInuseCheckParamDeleteOnTermination
          - Ref: Ec2VolumeInuseCheckParamDeleteOnTermination
          - Ref: AWS::NoValue
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::Volume
      Source:
        Owner: AWS
        SourceIdentifier: EC2_VOLUME_INUSE_CHECK

  EfsEncryptedCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Because sensitive data can exist and to help protect data at rest, ensure encryption is enabled for your Amazon Elastic File System (EFS).'
      ConfigRuleName: nist-efs-encrypted-check-medium
      Source:
        Owner: AWS
        SourceIdentifier: EFS_ENCRYPTED_CHECK

  EfsInBackupPlan:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'To help with data back-up processes, ensure your Amazon Elastic File System (Amazon EFS) file systems are a part of an AWS Backup plan. AWS Backup is a fully managed backup service with a policy-based backup solution.'
      ConfigRuleName: nist-efs-in-backup-plan-medium
      Source:
        Owner: AWS
        SourceIdentifier: EFS_IN_BACKUP_PLAN

  ElasticacheRedisClusterAutomaticBackupCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'When automatic backups are enabled, Amazon ElastiCache creates a backup of the cluster on a daily basis. The backup can be retained for a number of days as specified by your organization. Automatic backups can help guard against data loss.'
      ConfigRuleName: nist-elasticache-redis-cluster-automatic-backup-check-low
      Source:
        Owner: AWS
        SourceIdentifier: ELASTICACHE_REDIS_CLUSTER_AUTOMATIC_BACKUP_CHECK

  ElasticsearchEncryptedAtRest:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Because sensitive data can exist and to help protect data at rest, ensure encryption is enabled for your Amazon Elasticsearch Service (Amazon ES) domains.'
      ConfigRuleName: nist-elasticsearch-encrypted-at-rest-medium
      Source:
        Owner: AWS
        SourceIdentifier: ELASTICSEARCH_ENCRYPTED_AT_REST

  ElasticsearchInVpcOnly:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Manage access to the AWS Cloud by ensuring Amazon Elasticsearch Service (Amazon ES) Domains are within an Amazon Virtual Private Cloud (Amazon VPC).'
      ConfigRuleName: nist-elasticsearch-in-vpc-only-critical
      Source:
        Owner: AWS
        SourceIdentifier: ELASTICSEARCH_IN_VPC_ONLY

  ElasticsearchNodeToNodeEncryptionCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Ensure node-to-node encryption for Amazon Elasticsearch Service is enabled. Node-to-node encryption enables TLS 1.2 encryption for all communications within the Amazon Virtual Private Cloud (Amazon VPC).'
      ConfigRuleName: nist-elasticsearch-node-to-node-encryption-check-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::Elasticsearch::Domain
      Source:
        Owner: AWS
        SourceIdentifier: ELASTICSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK

  ElbAcmCertificateRequired:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Because sensitive data can exist and to help protect data at transit, ensure encryption is enabled for your Elastic Load Balancing.'
      ConfigRuleName: nist-elb-acm-certificate-required-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::ElasticLoadBalancing::LoadBalancer
      Source:
        Owner: AWS
        SourceIdentifier: ELB_ACM_CERTIFICATE_REQUIRED

  ElbCrossZoneLoadBalancingEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Enable cross-zone load balancing for your Elastic Load Balancers (ELBs) to help maintain adequate capacity and availability. The cross-zone load balancing reduces the need to maintain equivalent numbers of instances in each enabled availability zone.'
      ConfigRuleName: nist-elb-cross-zone-load-balancing-enabled-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::ElasticLoadBalancing::LoadBalancer
      Source:
        Owner: AWS
        SourceIdentifier: ELB_CROSS_ZONE_LOAD_BALANCING_ENABLED

  ElbDeletionProtectionEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'This rule ensures that Elastic Load Balancing has deletion protection enabled. Use this feature to prevent your load balancer from being accidentally or maliciously deleted, which can lead to loss of availability for your applications.'
      ConfigRuleName: nist-elb-deletion-protection-enabled-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::ElasticLoadBalancingV2::LoadBalancer
      Source:
        Owner: AWS
        SourceIdentifier: ELB_DELETION_PROTECTION_ENABLED

  ElbLoggingEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Elastic Load Balancing activity is a central point of communication within an environment. Ensure ELB logging is enabled. The collected data provides detailed information about requests sent to the ELB.'
      ConfigRuleName: nist-elb-logging-enabled-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::ElasticLoadBalancing::LoadBalancer
        - AWS::ElasticLoadBalancingV2::LoadBalancer
      Source:
        Owner: AWS
        SourceIdentifier: ELB_LOGGING_ENABLED

  ElbTlsHttpsListenersOnly:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Ensure that your Elastic Load Balancers (ELBs) are configured with SSL or HTTPS listeners. Because sensitive data can exist, enable encryption in transit to help protect that data.'
      ConfigRuleName: nist-elb-tls-https-listeners-only-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::ElasticLoadBalancing::LoadBalancer
      Source:
        Owner: AWS
        SourceIdentifier: ELB_TLS_HTTPS_LISTENERS_ONLY

  EmrKerberosEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'The access permissions and authorizations can be managed and incorporated with the principles of least privilege and separation of duties, by enabling Kerberos for Amazon EMR clusters.'
      ConfigRuleName: nist-emr-kerberos-enabled-low
      Source:
        Owner: AWS
        SourceIdentifier: EMR_KERBEROS_ENABLED

  EmrMasterNoPublicIp:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Manage access to the AWS Cloud by ensuring Amazon EMR cluster master nodes cannot be publicly accessed. Amazon EMR cluster master nodes can contain sensitive information and access control is required for such accounts.'
      ConfigRuleName: nist-emr-master-no-public-ip-high
      Scope:
        ComplianceResourceTypes: []
      Source:
        Owner: AWS
        SourceIdentifier: EMR_MASTER_NO_PUBLIC_IP

  EncryptedVolumes:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Because senstive data can exist and to help protect data at rest, ensure encryption is enabled for your Amazon Elastic Block Store (Amazon EBS) volumes.'
      ConfigRuleName: nist-encrypted-volumes-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::Volume
      Source:
        Owner: AWS
        SourceIdentifier: ENCRYPTED_VOLUMES

  GuarddutyEnabledCentralized:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Amazon GuardDuty can help to monitor and detect potential cybersecurity events by using threat intelligence feeds.'
      ConfigRuleName: nist-guardduty-enabled-centralized-medium
      Source:
        Owner: AWS
        SourceIdentifier: GUARDDUTY_ENABLED_CENTRALIZED

  GuarddutyNonArchivedFindings:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Amazon GuardDuty helps you understand the impact of an incident by classifying findings by severity: low, medium, and high. You can use these classifications for determining remediation strategies and priorities.'
      ConfigRuleName: nist-guardduty-non-archived-findings-low
      InputParameters:
        daysHighSev:
          Fn::If:
          - guarddutyNonArchivedFindingsParamDaysHighSev
          - Ref: GuarddutyNonArchivedFindingsParamDaysHighSev
          - Ref: AWS::NoValue
        daysLowSev:
          Fn::If:
          - guarddutyNonArchivedFindingsParamDaysLowSev
          - Ref: GuarddutyNonArchivedFindingsParamDaysLowSev
          - Ref: AWS::NoValue
        daysMediumSev:
          Fn::If:
          - guarddutyNonArchivedFindingsParamDaysMediumSev
          - Ref: GuarddutyNonArchivedFindingsParamDaysMediumSev
          - Ref: AWS::NoValue
      Source:
        Owner: AWS
        SourceIdentifier: GUARDDUTY_NON_ARCHIVED_FINDINGS

  IamGroupHasUsersCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'AWS Identity and Access Management (IAM) can help you incorporate the principles of least privilege and separation of duties with access permissions and authorizations, by ensuring that IAM groups have at least one IAM user.'
      ConfigRuleName: nist-iam-group-has-users-check-low
      Scope:
        ComplianceResourceTypes:
        - AWS::IAM::Group
      Source:
        Owner: AWS
        SourceIdentifier: IAM_GROUP_HAS_USERS_CHECK

  IamNoInlinePolicyCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Ensure an AWS Identity and Access Management (IAM) user, IAM role or IAM group does not have an inline policy to control access to systems and assets. AWS recommends to use managed policies instead of inline policies.'
      ConfigRuleName: nist-iam-no-inline-policy-check-low
      Scope:
        ComplianceResourceTypes:
        - AWS::IAM::User
        - AWS::IAM::Role
        - AWS::IAM::Group
      Source:
        Owner: AWS
        SourceIdentifier: IAM_NO_INLINE_POLICY_CHECK

  IamPasswordPolicy:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'The identities and the credentials are issued, managed, and verified based on an organizational IAM password policy.'
      ConfigRuleName: nist-iam-password-policy-medium
      InputParameters:
        MaxPasswordAge:
          Fn::If:
          - iamPasswordPolicyParamMaxPasswordAge
          - Ref: IamPasswordPolicyParamMaxPasswordAge
          - Ref: AWS::NoValue
        MinimumPasswordLength:
          Fn::If:
          - iamPasswordPolicyParamMinimumPasswordLength
          - Ref: IamPasswordPolicyParamMinimumPasswordLength
          - Ref: AWS::NoValue
        PasswordReusePrevention:
          Fn::If:
          - iamPasswordPolicyParamPasswordReusePrevention
          - Ref: IamPasswordPolicyParamPasswordReusePrevention
          - Ref: AWS::NoValue
        RequireLowercaseCharacters:
          Fn::If:
          - iamPasswordPolicyParamRequireLowercaseCharacters
          - Ref: IamPasswordPolicyParamRequireLowercaseCharacters
          - Ref: AWS::NoValue
        RequireNumbers:
          Fn::If:
          - iamPasswordPolicyParamRequireNumbers
          - Ref: IamPasswordPolicyParamRequireNumbers
          - Ref: AWS::NoValue
        RequireSymbols:
          Fn::If:
          - iamPasswordPolicyParamRequireSymbols
          - Ref: IamPasswordPolicyParamRequireSymbols
          - Ref: AWS::NoValue
        RequireUppercaseCharacters:
          Fn::If:
          - iamPasswordPolicyParamRequireUppercaseCharacters
          - Ref: IamPasswordPolicyParamRequireUppercaseCharacters
          - Ref: AWS::NoValue
      Source:
        Owner: AWS
        SourceIdentifier: IAM_PASSWORD_POLICY

  IamPolicyNoStatementsWithAdminAccess:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'AWS Identity and Access Management (IAM) can help you incorporate the principles of least privilege with access permissions and authorizations, restricting policies from containing "Effect": "Allow" with "Action": "*" over "Resource": "*".'
      ConfigRuleName: nist-iam-policy-no-statements-with-admin-access-high
      Scope:
        ComplianceResourceTypes:
        - AWS::IAM::Policy
      Source:
        Owner: AWS
        SourceIdentifier: IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS

  IamRootAccessKeyCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Access to systems and assets can be controlled by checking that the root user does not have access keys attached to their AWS Identity and Access Management (IAM) role. Ensure that the root access keys are deleted.'
      ConfigRuleName: nist-iam-root-access-key-check-critical
      Source:
        Owner: AWS
        SourceIdentifier: IAM_ROOT_ACCESS_KEY_CHECK

  IamUserGroupMembershipCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'AWS Identity and Access Management (IAM) can help you restrict access permissions and authorizations, by ensuring IAM users are members of at least one group.'
      ConfigRuleName: nist-iam-user-group-membership-check-low
      Scope:
        ComplianceResourceTypes:
        - AWS::IAM::User
      Source:
        Owner: AWS
        SourceIdentifier: IAM_USER_GROUP_MEMBERSHIP_CHECK

  IamUserMfaEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: 'Enable this rule to restrict access to resources in the AWS Cloud. This rule ensures multi-factor authentication (MFA) is enabled for all IAM users. MFA adds an extra layer of protection on top of a user name and password.'
      ConfigRuleName: nist-iam-user-mfa-enabled-medium
      Source:
        Owner: AWS
        SourceIdentifier: IAM_USER_MFA_ENABLED

  IamUserNoPoliciesCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description:  This rule ensures AWS Identity and Access Management (IAM) policies are attached only to groups or roles to control access to systems and assets.s
      ConfigRuleName: nist-iam-user-no-policies-check-low
      Scope:
        ComplianceResourceTypes:
        - AWS::IAM::User
      Source:
        Owner: AWS
        SourceIdentifier: IAM_USER_NO_POLICIES_CHECK

  IamUserUnusedCredentialsCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: AWS Identity and Access Management (IAM) can help you with access permissions and authorizations by checking for IAM passwords and access keys that are not used for a specified time period.
      ConfigRuleName: nist-iam-user-unused-credentials-check-medium
      InputParameters:
        maxCredentialUsageAge:
          Fn::If:
          - iamUserUnusedCredentialsCheckParamMaxCredentialUsageAge
          - Ref: IamUserUnusedCredentialsCheckParamMaxCredentialUsageAge
          - Ref: AWS::NoValue
      Source:
        Owner: AWS
        SourceIdentifier: IAM_USER_UNUSED_CREDENTIALS_CHECK

  IncomingSshDisabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Amazon Elastic Compute Cloud (Amazon EC2) Security Groups can help manage network access by providing stateful filtering of ingress and egress network traffic to AWS resources.
      ConfigRuleName: nist-restricted-ssh-high
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::SecurityGroup
      Source:
        Owner: AWS
        SourceIdentifier: INCOMING_SSH_DISABLED

  InstancesInVpc:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Deploy Elastic Compute Cloud (EC2) instances within an Virtual Private Cloud (VPC) to enable secure communication between an instance and other services within the amazon VPC, without requiring an internet gateway, NAT device, or VPN connection. 
      ConfigRuleName: nist-ec2-instances-in-vpc-high
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::Instance
      Source:
        Owner: AWS
        SourceIdentifier: INSTANCES_IN_VPC

  InternetGatewayAuthorizedVpcOnly:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by ensuring that internet gateways are only attached to authorized Amazon Virtual Private Cloud (Amazon VPC).
      ConfigRuleName: nist-internet-gateway-authorized-vpc-only-high
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::InternetGateway
      Source:
        Owner: AWS
        SourceIdentifier: INTERNET_GATEWAY_AUTHORIZED_VPC_ONLY
      InputParameters:
        AuthorizedVpcIds: !Ref IGWAuthorizedVPC

  KmsCmkNotScheduledForDeletion:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: To help protect data at rest, ensure necessary customer master keys (CMKs) are not scheduled for deletion in AWS Key Management Service (AWS KMS).
      ConfigRuleName: nist-kms-cmk-not-scheduled-for-deletion-critical
      Scope:
        ComplianceResourceTypes:
        - AWS::KMS::Key
      Source:
        Owner: AWS
        SourceIdentifier: KMS_CMK_NOT_SCHEDULED_FOR_DELETION

  LambdaFunctionPublicAccessProhibited:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by ensuring AWS Lambda functions cannot be publicly accessed. Public access can potentially lead to degradation of availability of resources.
      ConfigRuleName: nist-lambda-function-public-access-prohibited-critical
      Scope:
        ComplianceResourceTypes:
        - AWS::Lambda::Function
      Source:
        Owner: AWS
        SourceIdentifier: LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED

  LambdaInsideVpc:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Deploy AWS Lambda functions within an Amazon Virtual Private Cloud (Amazon VPC) for a secure communication between a function and other services within the Amazon VPC.
      ConfigRuleName: nist-lambda-inside-vpc-low
      Scope:
        ComplianceResourceTypes:
        - AWS::Lambda::Function
      Source:
        Owner: AWS
        SourceIdentifier: LAMBDA_INSIDE_VPC

  MfaEnabledForIamConsoleAccess:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by ensuring that MFA is enabled for all AWS Identity and Access Management (IAM) users that have a console password. MFA adds an extra layer of protection on top of a user name and password. 
      ConfigRuleName: nist-mfa-enabled-for-iam-console-access-medium
      Source:
        Owner: AWS
        SourceIdentifier: MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS

  MultiRegionCloudTrailEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: AWS CloudTrail records AWS Management Console actions and API calls. 
      ConfigRuleName: nist-multi-region-cloudtrail-enabled-high
      Source:
        Owner: AWS
        SourceIdentifier: MULTI_REGION_CLOUD_TRAIL_ENABLED

  RdsEnhancedMonitoringEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Enable Amazon Relational Database Service (Amazon RDS) to help monitor Amazon RDS availability. This provides detailed visibility into the health of your Amazon RDS database instances. 
      ConfigRuleName: nist-rds-enhanced-monitoring-enabled-low
      Scope:
        ComplianceResourceTypes:
        - AWS::RDS::DBInstance
      Source:
        Owner: AWS
        SourceIdentifier: RDS_ENHANCED_MONITORING_ENABLED

  RdsInBackupPlan:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: To help with data back-up processes, ensure your Amazon Relational Database Service (Amazon RDS) instances are a part of an AWS Backup plan. AWS Backup is a fully managed backup service with a policy-based backup solution.
      ConfigRuleName: nist-rds-in-backup-plan-low
      Source:
        Owner: AWS
        SourceIdentifier: RDS_IN_BACKUP_PLAN

  RdsInstanceDeletionProtectionEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Ensure Amazon Relational Database Service (Amazon RDS) instances have deletion protection enabled.
      ConfigRuleName: nist-rds-instance-deletion-protection-enabled-low
      Scope:
        ComplianceResourceTypes:
        - AWS::RDS::DBInstance
      Source:
        Owner: AWS
        SourceIdentifier: RDS_INSTANCE_DELETION_PROTECTION_ENABLED

  RdsInstancePublicAccessCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by ensuring that Amazon Relational Database Service (Amazon RDS) instances are not public. 
      ConfigRuleName: nist-rds-instance-public-access-check-critical
      Scope:
        ComplianceResourceTypes:
        - AWS::RDS::DBInstance
      Source:
        Owner: AWS
        SourceIdentifier: RDS_INSTANCE_PUBLIC_ACCESS_CHECK

  RdsLoggingEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: To help with logging and monitoring within your environment, ensure Amazon Relational Database Service (Amazon RDS) logging is enabled. With Amazon RDS logging, you can capture events such as connections, disconnections, queries, or tables queried.
      ConfigRuleName: nist-rds-logging-enabled-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::RDS::DBInstance
      Source:
        Owner: AWS
        SourceIdentifier: RDS_LOGGING_ENABLED

  RdsMultiAzSupport:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Multi-AZ support in Amazon Relational Database Service (Amazon RDS) provides enhanced availability and durability for database instances.
      ConfigRuleName: nist-rds-multi-az-support-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::RDS::DBInstance
      Source:
        Owner: AWS
        SourceIdentifier: RDS_MULTI_AZ_SUPPORT

  RdsSnapshotEncrypted:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Ensure that encryption is enabled for your Amazon Relational Database Service (Amazon RDS) snapshots. Because sensitive data can exist at rest, enable encryption at rest to help protect that data.
      ConfigRuleName: nist-rds-snapshot-encrypted-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::RDS::DBSnapshot
        - AWS::RDS::DBClusterSnapshot
      Source:
        Owner: AWS
        SourceIdentifier: RDS_SNAPSHOT_ENCRYPTED

  RdsSnapshotsPublicProhibited:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by ensuring that Amazon Relational Database Service (Amazon RDS) instances are not public.
      ConfigRuleName: nist-rds-snapshots-public-prohibited-critical
      Scope:
        ComplianceResourceTypes:
        - AWS::RDS::DBSnapshot
        - AWS::RDS::DBClusterSnapshot
      Source:
        Owner: AWS
        SourceIdentifier: RDS_SNAPSHOTS_PUBLIC_PROHIBITED

  RdsStorageEncrypted:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: To help protect data at rest, ensure that encryption is enabled for your Amazon Relational Database Service (Amazon RDS) instances. Because sensitive data can exist at rest in Amazon RDS instances, enable encryption at rest to help protect that data.
      ConfigRuleName: nist-rds-storage-encrypted-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::RDS::DBInstance
      Source:
        Owner: AWS
        SourceIdentifier: RDS_STORAGE_ENCRYPTED

  RedshiftClusterConfigurationCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: To protect data at rest, ensure that encryption is enabled for your Amazon Redshift clusters. You must also ensure that required configurations are deployed on Amazon Redshift clusters. 
      ConfigRuleName: nist-redshift-cluster-configuration-check-medium
      InputParameters:
        clusterDbEncrypted: 'TRUE'
        loggingEnabled: 'TRUE'
      Scope:
        ComplianceResourceTypes:
        - AWS::Redshift::Cluster
      Source:
        Owner: AWS
        SourceIdentifier: REDSHIFT_CLUSTER_CONFIGURATION_CHECK

  RedshiftClusterPublicAccessCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by ensuring that Amazon Redshift clusters are not public. Amazon Redshift clusters can contain sensitive information and principles and access control is required for such accounts.
      ConfigRuleName: nist-redshift-cluster-public-access-check-critical
      Scope:
        ComplianceResourceTypes:
        - AWS::Redshift::Cluster
      Source:
        Owner: AWS
        SourceIdentifier: REDSHIFT_CLUSTER_PUBLIC_ACCESS_CHECK

  RedshiftRequireTlsSsl:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Ensure that your Amazon Redshift clusters require TLS/SSL encryption to connect to SQL clients. Because sensitive data can exist, enable encryption in transit to help protect that data.
      ConfigRuleName: nist-redshift-require-tls-ssl-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::Redshift::Cluster
      Source:
        Owner: AWS
        SourceIdentifier: REDSHIFT_REQUIRE_TLS_SSL

  RestrictedIncomingTraffic:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by ensuring common ports are restricted on Amazon Elastic Compute Cloud (Amazon EC2) security groups.
      ConfigRuleName: nist-restricted-common-ports-high
      InputParameters:
        blockedPort1:
          Fn::If:
          - restrictedIncomingTrafficParamBlockedPort1
          - Ref: RestrictedIncomingTrafficParamBlockedPort1
          - Ref: AWS::NoValue
        blockedPort2:
          Fn::If:
          - restrictedIncomingTrafficParamBlockedPort2
          - Ref: RestrictedIncomingTrafficParamBlockedPort2
          - Ref: AWS::NoValue
        blockedPort3:
          Fn::If:
          - restrictedIncomingTrafficParamBlockedPort3
          - Ref: RestrictedIncomingTrafficParamBlockedPort3
          - Ref: AWS::NoValue
        blockedPort4:
          Fn::If:
          - restrictedIncomingTrafficParamBlockedPort4
          - Ref: RestrictedIncomingTrafficParamBlockedPort4
          - Ref: AWS::NoValue
        blockedPort5:
          Fn::If:
          - restrictedIncomingTrafficParamBlockedPort5
          - Ref: RestrictedIncomingTrafficParamBlockedPort5
          - Ref: AWS::NoValue
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::SecurityGroup
      Source:
        Owner: AWS
        SourceIdentifier: RESTRICTED_INCOMING_TRAFFIC

  RootAccountHardwareMfaEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by ensuring hardware MFA is enabled for the root user. The root user is the most privileged user in an AWS account. The MFA adds an extra layer of protection for a user name and password.
      ConfigRuleName: nist-root-account-hardware-mfa-enabled-critical
      Source:
        Owner: AWS
        SourceIdentifier: ROOT_ACCOUNT_HARDWARE_MFA_ENABLED

  RootAccountMfaEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by ensuring MFA is enabled for the root user. The root user is the most privileged user in an AWS account.
      ConfigRuleName: nist-root-account-mfa-enabled-critical
      Source:
        Owner: AWS
        SourceIdentifier: ROOT_ACCOUNT_MFA_ENABLED

  S3AccountLevelPublicAccessBlocks:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by ensuring that Amazon Simple Storage Service (Amazon S3) buckets cannot be publicly accessed.
      ConfigRuleName: nist-s3-account-level-public-access-blocks-medium
      InputParameters:
        BlockPublicAcls:
          Fn::If:
          - s3AccountLevelPublicAccessBlocksParamBlockPublicAcls
          - Ref: S3AccountLevelPublicAccessBlocksParamBlockPublicAcls
          - Ref: AWS::NoValue
        BlockPublicPolicy:
          Fn::If:
          - s3AccountLevelPublicAccessBlocksParamBlockPublicPolicy
          - Ref: S3AccountLevelPublicAccessBlocksParamBlockPublicPolicy
          - Ref: AWS::NoValue
        IgnorePublicAcls:
          Fn::If:
          - s3AccountLevelPublicAccessBlocksParamIgnorePublicAcls
          - Ref: S3AccountLevelPublicAccessBlocksParamIgnorePublicAcls
          - Ref: AWS::NoValue
        RestrictPublicBuckets:
          Fn::If:
          - s3AccountLevelPublicAccessBlocksParamRestrictPublicBuckets
          - Ref: S3AccountLevelPublicAccessBlocksParamRestrictPublicBuckets
          - Ref: AWS::NoValue
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::AccountPublicAccessBlock
      Source:
        Owner: AWS
        SourceIdentifier: S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS

  S3BucketDefaultLockEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Ensure that your Amazon Simple Storage Service (Amazon S3) bucket has lock enabled, by default. Because sensitive data can exist at rest in S3 buckets, enforce object locks at rest to help protect that data.
      ConfigRuleName: nist-s3-bucket-default-lock-enabled-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_DEFAULT_LOCK_ENABLED

  S3BucketLoggingEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Amazon Simple Storage Service (Amazon S3) server access logging provides a method to monitor the network for potential cybersecurity events. 
      ConfigRuleName: nist-s3-bucket-logging-enabled-low
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_LOGGING_ENABLED

  S3BucketPolicyGranteeCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to the AWS Cloud by enabling s3_ bucket_policy_grantee_check.
      ConfigRuleName: nist-s3-bucket-policy-grantee-check-low
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_POLICY_GRANTEE_CHECK

  S3BucketPublicReadProhibited:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by only allowing authorized users, processes, and devices access to Amazon Simple Storage Service (Amazon S3) buckets. The management of access should be consistent with the classification of the data.
      ConfigRuleName: nist-s3-bucket-public-read-prohibited-critical
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_PUBLIC_READ_PROHIBITED

  S3BucketPublicWriteProhibited:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by only allowing authorized users, processes, and devices access to Amazon Simple Storage Service (Amazon S3) buckets. The management of access should be consistent with the classification of the data.
      ConfigRuleName: nist-s3-bucket-public-write-prohibited-critical
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_PUBLIC_WRITE_PROHIBITED

  S3BucketReplicationEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Amazon Simple Storage Service (Amazon S3) Cross-Region Replication (CRR) supports maintaining adequate capacity and availability.
      ConfigRuleName: nist-s3-bucket-replication-enabled-low
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_REPLICATION_ENABLED

  S3BucketServerSideEncryptionEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: To help protect data at rest, ensure encryption is enabled for your Amazon Simple Storage Service (Amazon S3) buckets. Because sensitive data can exist at rest in Amazon S3 buckets, enable encryption to help protect that data.
      ConfigRuleName: nist-s3-bucket-server-side-encryption-enabled-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED

  S3BucketSslRequestsOnly:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: To help protect data in transit, ensure that your Amazon Simple Storage Service (Amazon S3) buckets require requests to use Secure Socket Layer (SSL). Because sensitive data can exist, enable encryption in transit to help protect that data.
      ConfigRuleName: nist-s3-bucket-ssl-requests-only-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_SSL_REQUESTS_ONLY

  S3BucketVersioningEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Amazon Simple Storage Service (Amazon S3) bucket versioning helps keep multiple variants of an object in the same Amazon S3 bucket.
      ConfigRuleName: nist-s3-bucket-versioning-enabled-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_VERSIONING_ENABLED

  SagemakerEndpointConfigurationKmsKeyConfigured:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: To help protect data at rest, ensure encryption with AWS Key Management Service (AWS KMS) is enabled for your SageMaker endpoint. Because sensitive data can exist at rest in SageMaker endpoint, enable encryption at rest to help protect that data.
      ConfigRuleName: nist-sagemaker-endpoint-configuration-kms-key-configured-medium
      Source:
        Owner: AWS
        SourceIdentifier: SAGEMAKER_ENDPOINT_CONFIGURATION_KMS_KEY_CONFIGURED

  SagemakerNotebookInstanceKmsKeyConfigured:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: To help protect data at rest, ensure encryption with AWS Key Management Service (AWS KMS) is enabled for your SageMaker notebook. Because sensitive data can exist at rest in SageMaker notebook, enable encryption at rest to help protect that data.
      ConfigRuleName: nist-sagemaker-notebook-instance-kms-key-configured-medium
      Source:
        Owner: AWS
        SourceIdentifier: SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED

  SagemakerNotebookNoDirectInternetAccess:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by ensuring that Amazon SageMaker notebooks do not allow direct internet access. By preventing direct internet access, you can keep sensitive data from being accessed by unauthorized users.
      ConfigRuleName: nist-sagemaker-notebook-no-direct-internet-access-high
      Source:
        Owner: AWS
        SourceIdentifier: SAGEMAKER_NOTEBOOK_NO_DIRECT_INTERNET_ACCESS

  SecretsmanagerScheduledRotationSuccessCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: This rule ensures that AWS Secrets Manager secrets have rotated successfully according to the rotation schedule. Rotating secrets on a regular schedule can shorten the period that a secret is active, reducing the business impact if it is compromised.
      ConfigRuleName: nist-secretsmanager-scheduled-rotation-success-check-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::SecretsManager::Secret
      Source:
        Owner: AWS
        SourceIdentifier: SECRETSMANAGER_SCHEDULED_ROTATION_SUCCESS_CHECK

  SecurityhubEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: AWS Security Hub helps to monitor unauthorized personnel, connections, devices, and software. AWS Security Hub aggregates, organizes, and prioritizes the security alerts, or findings, from multiple AWS services.
      ConfigRuleName: nist-securityhub-enabled-high
      Source:
        Owner: AWS
        SourceIdentifier: SECURITYHUB_ENABLED

  SnsEncryptedKms:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: To help protect data at rest, ensure that your Amazon Simple Notification Service (Amazon SNS) topics require encryption using AWS Key Management Service (AWS KMS).
      ConfigRuleName: nist-sns-encrypted-kms-medium
      Scope:
        ComplianceResourceTypes:
        - AWS::SNS::Topic
      Source:
        Owner: AWS
        SourceIdentifier: SNS_ENCRYPTED_KMS

  VpcDefaultSecurityGroupClosed:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Amazon Elastic Compute Cloud (Amazon EC2) security groups can help in the management of network access by providing stateful filtering of ingress and egress network traffic to AWS resources.
      ConfigRuleName: nist-vpc-default-security-group-closed-high
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::SecurityGroup
      Source:
        Owner: AWS
        SourceIdentifier: VPC_DEFAULT_SECURITY_GROUP_CLOSED

  VpcFlowLogsEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: The VPC flow logs provide detailed records for information about the IP traffic going to and from network interfaces in your Amazon Virtual Private Cloud (Amazon VPC).
      ConfigRuleName: nist-vpc-flow-logs-enabled-medium
      Source:
        Owner: AWS
        SourceIdentifier: VPC_FLOW_LOGS_ENABLED

  VpcSgOpenOnlyToAuthorizedPorts:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Manage access to resources in the AWS Cloud by ensuring common ports are restricted on Amazon Elastic Compute Cloud (Amazon EC2) Security Groups.
      ConfigRuleName: nist-vpc-sg-open-only-to-authorized-ports-medium
      InputParameters:
        authorizedTcpPorts:
          Fn::If:
          - vpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts
          - Ref: VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts
          - Ref: AWS::NoValue
        authorizedUdpPorts:
          Fn::If:
          - vpcSgOpenOnlyToAuthorizedPortsParamAuthorizedUdpPorts
          - Ref: VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedUdpPorts
          - Ref: AWS::NoValue
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::SecurityGroup
      Source:
        Owner: AWS
        SourceIdentifier: VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS

  VpcVpn2TunnelsUp:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: Redundant Site-to-Site VPN tunnels can be implemented to achieve resilience requirements. It uses two tunnels to help ensure connectivity in case one of the Site-to-Site VPN connections becomes unavailable.
      ConfigRuleName: nist-vpc-vpn-2-tunnels-up-low
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::VPNConnection
      Source:
        Owner: AWS
        SourceIdentifier: VPC_VPN_2_TUNNELS_UP

  Wafv2LoggingEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      Description: To help with logging and monitoring within your environment, enable AWS WAF (V2) logging on regional and global web ACLs. AWS WAF logging provides detailed information about the traffic that is analyzed by your web ACL.
      ConfigRuleName: nist-wafv2-logging-enabled-high
      Source:
        Owner: AWS
        SourceIdentifier: WAFV2_LOGGING_ENABLED